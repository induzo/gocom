## START SECTION TO BE CONFIGURED WITH YOUR OWN REPO PATH

[linters-settings.gci]
sections = ["standard", "default", "prefix(github.com/induzo)"]

[linters-settings.gofumpt]
extra-rules = true
module-path = "github.com/induzo"

## END SECTION TO BE CONFIGURED WITH YOUR OWN REPO PATH


[run]
timeout = "15m"

[linters]
disable-all = true

enable = [
    "asasalint",
    "asciicheck",
    "bidichk",
    "bodyclose",
    "canonicalheader",
    "containedctx",
    "contextcheck",
    "copyloopvar",
    "cyclop",
    "decorder",
    "depguard",
    "dogsled",
    "dupl",
    "dupword",
    "durationcheck",
    "err113",
    "errcheck",
    "errchkjson",
    "errname",
    "errorlint",
    "exhaustive",
    "exportloopref",
    "fatcontext",
    "forbidigo",
    "forcetypeassert",
    "gci",
    "ginkgolinter",
    "gocheckcompilerdirectives",
    "gochecknoglobals",
    "gochecknoinits",
    "gochecksumtype",
    "gocognit",
    "goconst",
    "gocritic",
    "gocyclo",
    "godox",
    "gofmt",
    "gofumpt",
    "goheader",
    "goimports",
    "gomoddirectives",
    "gomodguard",
    "goprintffuncname",
    "gosec",
    "gosimple",
    "gosmopolitan",
    "govet",
    "grouper",
    "importas",
    "ineffassign",
    "interfacebloat",
    "intrange",
    "ireturn",
    "lll",
    "loggercheck",
    "maintidx",
    "makezero",
    "mirror",
    "misspell",
    "mnd",
    "nakedret",
    "nestif",
    "nilerr",
    "nilnil",
    "nlreturn",
    "noctx",
    "nolintlint",
    "nonamedreturns",
    "nosprintfhostport",
    "paralleltest",
    "perfsprint",
    "prealloc",
    "predeclared",
    "promlinter",
    "protogetter",
    "reassign",
    "revive",
    "rowserrcheck",
    "sloglint",
    "spancheck",
    "sqlclosecheck",
    "staticcheck",
    "stylecheck",
    "tagalign",
    "tenv",
    "testableexamples",
    "testifylint",
    "thelper",
    "tparallel",
    "unconvert",
    "unparam",
    "unused",
    "usestdlibvars",
    "varnamelen",
    "wastedassign",
    "whitespace",
    "wrapcheck",
    "wsl",
    "zerologlint",

    # Disabled by your configuration linters:
    # deadcode [deprecated]: Finds unused code [fast: false, auto-fix: false]
    # execinquery [deprecated]: execinquery is a linter about query string checker in Query function which reads your Go src files and warning it finds [fast: false, auto-fix: false]
    # exhaustivestruct [deprecated]: Checks if all struct's fields are initialized [fast: false, auto-fix: false]
    # exhaustruct: Checks if all structure fields are initialized [fast: false, auto-fix: false]
    # funlen: Tool for detection of long functions [fast: true, auto-fix: false]
    # godot: Check if comments end in a period [fast: true, auto-fix: true]
    # golint [deprecated]: Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes [fast: false, auto-fix: false]
    # ifshort [deprecated]: Checks that your code uses short syntax for if-statements whenever possible. [fast: true, auto-fix: false]
    # inamedparam: reports interfaces with unnamed method parameters [fast: true, auto-fix: false]
    # interfacer [deprecated]: Linter that suggests narrower interface types [fast: false, auto-fix: false]
    # maligned [deprecated]: Tool to detect Go structs that would take less memory if their fields were sorted [fast: false, auto-fix: false]
    # musttag: enforce field tags in (un)marshaled structs [fast: false, auto-fix: false]
    # nosnakecase [deprecated]: nosnakecase is a linter that detects snake case of variable naming and function name. [fast: true, auto-fix: false]
    # scopelint [deprecated]: Scopelint checks for unpinned variables in go programs [fast: true, auto-fix: false]
    # structcheck [deprecated]: Finds unused struct fields [fast: false, auto-fix: false]
    # tagliatelle: Checks the struct tags. [fast: true, auto-fix: false]
    # testpackage: linter that makes you use a separate _test package [fast: true, auto-fix: false]
    # varcheck [deprecated]: Finds unused global variables and constants [fast: false, auto-fix: false]]
]

[linters-settings.errcheck]
check-type-assertions = true
check-blank = true

[linters-settings.govet]
enable-all = true
disable = ["fieldalignment"]

[linters-settings.gosec]
excludes = ["G601"] # not necessary for golang > 1.22

[linters-settings.revive]
confidence = 0.0

[linters-settings.prealloc]
simple = false
range-loops = true
for-loops = true

[linters-settings.gocritic]
enabled-tags = [
    "diagnostic",
    "experimental",
    "opinionated",
    "performance",
    "style",
]
disabled-checks = ["whyNoLint", "unnamedResult"]

[linters-settings.errorlint]
errorf = true

[linters-settings.nolintlint]
require-explanation = true
require-specific = true

[linters-settings.tagalign]
align = false

[linters-settings.gomoddirectives]
replace-allow-list = ["github.com/crate-crypto/go-kzg-4844"]

# depguard
# [linters-settings.depguard.rules.prevent_unmaintained_packages]
# list-mode = "strict"

[[linters-settings.depguard.rules.prevent_unmaintained_packages.deny]]
pkg = "io/ioutil"
desc = "replaced by io and os packages since Go 1.16: https://tip.golang.org/doc/go1.16#ioutil"

# [linters-settings.depguard.rules.main]
# list-mode = "lax"

[[linters-settings.depguard.rules.main.deny]]
pkg = "github.com/sirupsen/logrus"
desc =  "please use log/slog from std lib"

[[linters-settings.depguard.rules.main.deny]]
pkg = "github.com/pkg/errors"
desc = "please use errors from std lib"

[[linters-settings.depguard.rules.main.deny]]
pkg = "gorm.io/gorm"
desc = "please use pgx and learn sql"

# [linters-settings.depguard.rules.test]
# list-mode = "lax"

[[linters-settings.depguard.rules.test.deny]]
pkg = "github.com/stretchr/testify/assert"
desc =  "please use go table tests and simple ifs"

[[linters-settings.depguard.rules.test.deny]]
pkg = "github.com/stretchr/testify/require"
desc =  "please use go table tests and simple ifs"

[[linters-settings.depguard.rules.test.deny]]
pkg = "github.com/stretchr/testify/suite"
desc =  "please use go table tests and simple ifs"

[linters-settings.ireturn]
allow = ["anon", "error", "empty", "stdlib", "generic"]

[[issues.exclude-rules]]
path = '(.+)_test\.go'
linters = [
    "funlen",
    "goconst",
    "interfacer",
    "dupl",
    "lll",
    "err113",
    "varnamelen",
    "errcheck",
    "gocritic",
    "cyclop",
    "wrapcheck",
    "gocognit",
    "contextcheck",
    "nlreturn",
    "gochecknoglobals",
    "errorlint",
    "forcetypeassert",
]

[[issues.exclude-rules]]
linters = ["lll"]
source = "^//go:generate "
